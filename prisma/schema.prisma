generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    email String? @unique

    password    String
    role        Role
    fileUrl     String?
    userProfile UserProfile?
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

model Recruiter {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    email String? @unique

    password  String
    role      Role
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum Role {
    candidate
    recruiter
}

model UserProfile {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    user      User    @relation(fields: [userEmail], references: [email])
    userEmail String  @unique
    name      String
    title     String?
    email     String?
    phone     String?
    location  String?
    summary   String?

    skills     String[]     @default([])
    experience Experience[]
    education  Education[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Experience {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    title       String?
    company     String?
    location    String?
    startDate   DateTime
    endDate     String
    description String?

    userProfileId String      @db.ObjectId
    userProfile   UserProfile @relation(fields: [userProfileId], references: [id])

    createdAt DateTime @default(now())
}

model Education {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    degree         String?
    institution    String?
    location       String?
    graduationDate DateTime?

    userProfileId String      @db.ObjectId
    userProfile   UserProfile @relation(fields: [userProfileId], references: [id])

    createdAt DateTime @default(now())
}
